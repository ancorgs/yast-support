/* 
 * 
 *
 * $Id$
 */

{
    textdomain "support";

    integer current_stage = -1;

    import "Wizard";
    include "ui/common_popups.ycp";

    include "support/supportio.ycp";

    // keydata is global !

    map keydata = read_supportkey ();

    Wizard::CreateDialog();
    Wizard::ReplaceAbortButton(`Empty());

    // if no valid supportkey data present, ask !

    any retval = nil;

    string check_message = check_supportkey (keydata);
    y2milestone ("check_message '%1'", check_message);
    boolean ask_key = (check_message != "");

    boolean go_on = true;

    while (go_on)
    {

	while (ask_key)
	{
	    retval = CallFunction (`support_askkey());
	    if (retval != `next)
	    {
		go_on = false;
		break;
	    }
	    else
	    {
		string check_message = check_supportkey (keydata);
		y2milestone ("check_message '%1'", check_message);
		ask_key = (check_message != "");
		if (ask_key == true)
		{
		    UI::ErrorPopup (check_message);
		}
		else if (keydata["changed"]:false)
		{
		    // popup when saving data
		    UI::MessagePopup (_("Saving new supportkey data"));
		    if (!write_supportkey (keydata))
		    {
			// popup when saving failed
			UI::ErrorPopup (_("Saving of supportkey data failed !"));
		    }
		    break;
		}
		else
		{
		    break;
		}
	    }
	} // while (ask_key)

	if (go_on == false)
	    break;

	retval = CallFunction (`support_question());
	if (retval == `ask_key)
	{
	    ask_key = true;
	}
	else if (retval == `back)
	{
	    retval = `abort;
	}
	else if (retval == `next)
	{
	    retval = `again;
	    // support_send might return `again, loop here
	    while (retval == `again)
	    {
		retval = CallFunction (`support_send ());
	    }
	    if (retval == `next)
	    {
		// just a final text to give user a 'good' fealing
		UI::MessagePopup (_("Thank you for using SuSE support"));
		go_on = false;
	    }
	}

	if (retval == `abort)
	{
	    go_on = false;
	}
    }


    // --------------------------------------------------------------
 
    Wizard::CloseDialog();
  
    return `next;
}
