/*
 *
 *
 * $Id$
 */

{
    textdomain "support";

    integer current_stage = -1;

    import "Wizard";
    import "Popup";

    include "support/support_question.ycp";
    include "support/support_send.ycp";

    /*
     * exit when running for non-root
     */

    map res = (map) SCR::Execute(.target.bash_output, "/usr/bin/whoami", $[]);
    list l_res = splitstring(res["stdout"]:"", "\n");

    if( size(l_res) > 0 &&  l_res[0]:"" != "root")
    {
        // Popup label (user is not root)
        Popup::Message(_("Log in as a root to run SuSE support."));
        return;
    }

    // global - not necessary to read data again
    string wrapper_data = "";
    string tmpdir = (string) SCR::Read(.target.tmpdir);

    Wizard::CreateDialog();
    Wizard::SetDesktopIcon("support");
    Wizard::HideBackButton();

    any retval = nil;

    boolean go_on = true;

    while (go_on)
    {

	retval = support_question ();
	if (retval == `back)
	{
	    retval = `abort;
	}
	else if (retval == `next)
	{
	    retval = `first;
	    // support_send might return `again, loop here
            // but do not need to generate & read info again - only for first time
	    while (retval == `again || retval == `first)
	    {
		retval = support_send (retval);
	    }
	    if (retval == `next)
	    {
		// just a final text to give user a 'good' feeling
		Popup::Message (_("Thank you for using SUSE support"));
		go_on = false;
	    }
	}

	if (retval == `abort)
	{
	    go_on = false;
	}
    }


    // --------------------------------------------------------------

    Wizard::CloseDialog();

/* EOF */
}
