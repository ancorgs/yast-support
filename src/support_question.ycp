/**
 * support_question.ycp
 *
 * asking a support question
 *
 * Author: Klaus Kaempf <kkaempf@suse.de>
 *
 * $Id$
 *
 */
{
    textdomain "support";

    import "Wizard";

    map<string, any> keydata = $[];

    define any support_question ()
``{

    // support_question.ycp

    // checkbox labels to identify a support question
    // keep the words short, 12 characters are maximum !
    map<string, string> ask_options = $[
	"--isdn"	: _("&ISDN"),
	"--printer"	: _("&Printer"),
	"--x11"		: _("&KDE/X11"),
	"--boot"	: _("&Booting"),
	"--sound"	: _("&Sound"),
	"--laptop"	: _("&Laptop"),
	"--mail"        : _("M&ail"),
	"--dsl"		: _("&DSL"),
	"--modem"	: _("&Modem"),
        "--cdr"         : _("&CD-R"),
        "--net"         : _("Net&work"),
        "--hw"          : _("&Hardware"),
	"--install"	: _("I&nstallation"),
        "--usb"         : _("&USB"),
	"--all"		: _("&Unspecified")
    ];

    string id_for_all = "--all";

    // frame label, around checkbuttons
    term ui_category_all = `HBox (
	    `Left (`RadioButton (`id(id_for_all), `opt(`notify), ask_options[id_for_all]:"", keydata[id_for_all]:true)));

    term ui_category_left   = `VBox ();
    term ui_category_middle = `VBox ();
    term ui_category_right  = `VBox ();

    integer side = 0;	// start left

    foreach ( string ckey, string clabel, ask_options,
    ``{
	if (ckey != id_for_all)
	{
	    if (side == 0)
	    {
		side = 1;
		ui_category_left = add (ui_category_left,
		    `Left (`RadioButton (`id(ckey), `opt(`notify), clabel, keydata[ckey]:false)));
	    }
	    else if (side == 1)
	    {
		side = 2;
		ui_category_middle = add (ui_category_middle,
		    `Left (`RadioButton (`id(ckey), `opt(`notify), clabel, keydata[ckey]:false)));
	    }
	    else
	    {
		side = 0;
		ui_category_right = add (ui_category_right,
		    `Left (`RadioButton (`id(ckey), `opt(`notify), clabel, keydata[ckey]:false)));
	    }
	}
    });

    // present/ask question data

    term contents = `VBox (
			// frame heading
		      `VSpacing (1.0),
		      // frame label, around checkbuttons
		      `Frame (_("Category"),
			`RadioButtonGroup(`id(`categories),
			  `VBox (
			    ui_category_all,
			    `HBox (
			      `Top(ui_category_left),
			      `Top(ui_category_middle),
			      `Top(ui_category_right)
			    )
			  )
			)
		      ),
		      `VSpacing (1.0),
		      `VStretch ()
		    );

        //helptext 1 of 5
    string help = _("<p><b>Support Information</b></p>\n");

        //helptext 2 of 5
    help = help + _("<p>Choose the category that applies to your problem.</p>");

    help = help + _("<p>The hardware and software information serves to determine
the basic system information and configuration of your computer.</p>
");

    // screen title
    Wizard::HideBackButton();
    Wizard::RestoreAbortButton();
    Wizard::SetContents (_("SUSE Support"), contents, help, true, true);

    any ret = nil;
    boolean go_on = true;

    while (go_on)
    {
	ret = UI::UserInput();

	if (is(ret, string))
	{
	    go_on = true;	// dummy
	}
	else if ((ret != `abort) && (ret != `cancel))
	{
	    foreach (string ckey, string clabel, ask_options,
	    ``{
		keydata[ckey] = UI::QueryWidget (`id(ckey), `Value);
	    });
	    go_on = false;
	}
	else
	{
	    go_on = false;
	}
    }

    return ret;
}
}
