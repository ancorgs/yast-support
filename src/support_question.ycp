/**
 * support_question.ycp
 *
 * asking a support question
 *
 * Author: Klaus Kaempf <kkaempf@suse.de>
 *
 * $Id$
 *
 */
{
    textdomain "support";

    // support_question.ycp

    // checkbox labels to identify a support question
    // keep the words short, 12 characters are maximum !
    map ask_options = $[
	"--isdn"	: _("&ISDN"),
	"--printer"	: _("&Printer"),
	"--x11"		: _("&KDE/X11"),
	"--boot"	: _("&Booting"),
	"--sound"	: _("&Sound"),
	"--laptop" 	: _("&Notebook"),
	"--dsl"		: _("&DSL"),
	"--modem"	: _("&Modem"),
	"--cdr"		: _("&CD-Writer"),
	"--scanner"	: _("Sc&anner"),
	"--install"	: _("I&nstallation"),
	"--all"		: _("&Unspecified")
    ];

    string id_for_all = "--all";

    // frame label, around checkbuttons
    term ui_category_all = `HBox (
	    `Left (`CheckBox (`id(id_for_all), `opt(`notify), lookup (ask_options, id_for_all, ""), lookup (regdata, id_for_all, false))));

    term ui_category_left = `VBox ();
    term ui_category_middle = `VBox ();
    term ui_category_right = `VBox ();

    integer side = 0;	// start left

    foreach (`ckey, `clabel, ask_options, ``{
	if (ckey != id_for_all)
	{
	    if (side == 0)
	    {
		side = 1;
		ui_category_left = add (ui_category_left,
		    `Left (`CheckBox (`id(ckey), `opt(`notify), clabel, lookup (regdata, ckey, false))));
	    }
	    else if (side == 1)
	    {
		side = 2;
		ui_category_middle = add (ui_category_middle,
		    `Left (`CheckBox (`id(ckey), `opt(`notify), clabel, lookup (regdata, ckey, false))));
	    }
	    else
	    {
		side = 0;
		ui_category_right = add (ui_category_right,
		    `Left (`CheckBox (`id(ckey), `opt(`notify), clabel, lookup (regdata, ckey, false))));
	    }
	}
    });

    // present/ask question data

    term contents = `VBox (
			// frame heading
		      `VBox (
			`Left (
			  `HBox (
			    // label for regcode field
			    `Label (_("Registration Code:")),
			    `Label (lookup (regdata, "regcode", ""))
			  )
			),
			`Left (
			  `HBox (
			    `Label (lookup (regdata, "name1", "")),
			    `Label (lookup (regdata, "name2", "")),
			    `HStretch (),
			    // push button for changeing registration data
			    `PushButton (`id(`ask_registration), _("&Change"))
			  )
			)
		      ),
		      `VSpacing (1.0),
		      // frame label, around checkbuttons
		      `Frame (_("Choose a category"),
			`VBox (
			  ui_category_all,
			  `HBox (
			    `Top(ui_category_left),
			    `Top(ui_category_middle),
			    `Top(ui_category_right)
			  )
			)
		      ),
		      `VSpacing (1.0),
		      // label for multi line edit widget where user can
		      // describe the problem
		      `MultiLineEdit (`id(`question), _("&Your question for SuSE support:"), lookup (regdata, "question", "")),
		      `VStretch ()
		    );

        //helptext 1 of 5
    string help = UI(_("<p><b>Support Question</b></p>\n"));

        //helptext 2 of 5
    help = help + UI(_("<p>Please describe your problem briefly here, but still 
as thoroughly as you can. Exact error messages and previous action you have taken 
are especially important for us to know.</p>"));

        //helptext 3 of 5
    help = help + UI(_("<p>Please do not include more than one question in a mail. 
In other words, separate multiple requests, if that is the case, under different 
subject blocks, and write a specific request corresponding to each topic. This makes 
them easier to process and thus accelerates our response.</p>"));

        //helptext 4 of 5
    help = help + UI(_("<p>The hard- and software information serves to determine 
the basic system information and configuration on your computer. In case of doubt, 
this information can be helpful for support and should therefore only be de-activated 
with good reason.</p>"));

    string website = "http://www.suse.de/en/support/prof";
    string language = substring (UI(`GetLanguage()), 0, 2);
    if (language == "de")
	website = "http://www.suse.de/de/support/prof";

        //helptext 5 of 5
	// keep the '%1' in the text, it will be replaced by an URL at runtime !
    help = help + sformat (UI(_("<p>If you need further support for individual problems, 
you can make use of the SuSE Professional Services as well. You will find more information about this at %1</p>")), website);

    // screen title
    UI(`SetWizardContents (_("SuSE Support"), contents, help, true, true));

    any ret = nil;
    boolean go_on = true;
    boolean ignore_all = false;

    while (go_on)
    {
	ret = UI (`UserInput());

	if (is (ret, string))
	{
	    boolean allstatus = UI(`QueryWidget (`id(id_for_all), `Value));
	    if (ret == id_for_all)
	    {
		if (ignore_all == true)
		{
		    ignore_all = false;
		}
		else if (allstatus == true)
		{
		    foreach (`ckey, `clabel, ask_options, ``{
			if (ckey != id_for_all)
			{
			    UI(`ChangeWidget (`id (ckey), `Value, false));
			}
		    });
		}
	    }
	    else
	    {
		UI(`ChangeWidget (`id (id_for_all), `Value, false));
		if (allstatus == true)
		    ignore_all = true;
	    }
	}
	else if (ret != `abort)
	{
	    regdata = add (regdata, "question", UI(`QueryWidget (`id(`question), `Value)));
	    foreach (`ckey, `clabel, ask_options, ``{
		regdata = add (regdata, ckey, UI(`QueryWidget (`id(ckey), `Value)));
	    });
	    go_on = false;
	}
	else
	{
	    go_on = false;
	}
    }

    return ret;
}
